//Calculations Section

function calcScore(age, glasgowScore, attributeScore) {
    var resultScore = age+(15-glasgowScore)*5.5+attributeScore;
    return resultScore;
}

function adjustScore(element) {
    var attributeValue = Number(document.getElementById(element).value);
    /*if (document.getElementById(element).checked = true) {
        injuryscore = attributeValue+injuryScore;
    } else if (document.getElementById(element).checked = false) {
        injuryscore = attributeValue-injuryScore;
    }*/
    console.log(attributeValue);
}

function fetchMortalityResults(value) {
    let closeness;
    let mortalityScore;
    let sdScore;

    mortalityScoreResult.forEach(element => {
        var difference = Math.abs(element.score - value);

        if (difference <= closeness || closeness === undefined) {
            mortalityScore = Number(element.mortality);
            sdScore = Number(element.SD);
            closeness = difference;
        }
    })

    var outputArray = {'mortalityScore': mortalityScore, 'sdScore': sdScore};

return outputArray;
}

function submitResults() {
    var age = Number(document.getElementById("age").value);
    var glasgowScore = Number(document.getElementById("glasgow").value);
    var attributeScore = 0;
    if (age > 64 && age < 200 && glasgowScore > 2 && glasgowScore < 16) {
        var getCheckBoxValues = document.getElementsByName("attributes");
        for (var i=0; i<getCheckBoxValues.length; i++) {
            if (getCheckBoxValues[i].checked) {
                attributeScore = Number(getCheckBoxValues[i].value)+attributeScore;
            }
        }

        var scoreFinal = calcScore(age, glasgowScore, attributeScore);
        console.log('Age: '+age);
        console.log('Glasgow Score: '+glasgowScore);
        console.log('Additional Factors: '+attributeScore);
        console.log('Calc Score: '+scoreFinal);

        var results = fetchMortalityResults(scoreFinal);

        resetResults()

        const resultsHeader = createHeader('Results');

        console.log(results)

        const resultsMortalityContainer = document.createElement('p');
        const resultsMortality = document.createTextNode('Mortality Rate: '+(results.mortalityScore*100).toFixed(2)+'%');
        resultsMortalityContainer.appendChild(resultsMortality);

        const resultsSDContainer = document.createElement('p');
        const resultsSD = document.createTextNode('The Standard Deviation is: '+(results.sdScore*100).toFixed(2)+'%');
        resultsSDContainer.appendChild(resultsSD);

        document.getElementById("results").appendChild(resultsHeader);
        document.getElementById("results").appendChild(resultsMortalityContainer);
        document.getElementById("results").appendChild(resultsSDContainer);
    }

//return scoreFinal;
}

function resetResults() {
    var resultsDiv = document.getElementById('results');
    while (resultsDiv.lastChild) {
        resultsDiv.removeChild(resultsDiv.lastChild);
    }
}

function resetAgeAlert() {
    var resultsDiv = document.getElementById('warningage');
    while (resultsDiv.lastChild) {
        resultsDiv.removeChild(resultsDiv.lastChild);
    }
}

function resetGlasgowAlert() {
    var resultsGlasgowDiv = document.getElementById('warningglasgow');
    while (resultsGlasgowDiv.lastChild) {
        resultsGlasgowDiv.removeChild(resultsGlasgowDiv.lastChild);
    }
}

//Web Components Section

function createHeader(text) {
    var headerContainer = document.createElement('h5');
    var headerContent = document.createTextNode(text);
    headerContainer.appendChild(headerContent);
    return headerContainer;
}

function createTextInput(setid) {
    var textContainer = document.createElement('div');
    textContainer.className = 'field';

    var textInput = document.createElement('input');
    textInput.type = 'text';
    textInput.id = setid;

    var errorMessageContainer = document.createElement('div');
    errorMessageContainer.id = "warning"+setid;

    textContainer.appendChild(textInput);
    textContainer.appendChild(errorMessageContainer);

return textContainer;
}

function createSubmit() {
    var submitButton = document.createElement('button');
    var buttonText = document.createTextNode("Submit Results");
    submitButton.appendChild(buttonText);
    submitButton.type = 'button';
    submitButton.className ="ui primary button";
    submitButton.onclick = function () {submitResults()};

return submitButton;
}

function createReset() {
    var resetButton = document.createElement('button');
    var resetButtontext = document.createTextNode("Reset Form");
    resetButton.appendChild(resetButtontext);
    resetButton.type = 'button';
    resetButton.className = 'ui button';
    resetButton.onclick = function () {
        document.getElementById("EMATForm").reset()
        resetResults()
    };

return resetButton;
}

function createClickBoxList(arrayIncoming) {
    var outputChecklist = document.createElement('div');
    outputChecklist.className = 'ui list';

    arrayIncoming.forEach(element => {
        var createCheck = document.createElement('input');
        createCheck.type = 'checkbox';
        createCheck.name = 'attributes';
        createCheck.value = element.value;
        createCheck.id = element.name;
        createCheck.onclick = function () {adjustScore(element.name)};

        var checkLabel = document.createElement('label')
        checkLabel.htmlFor = element.name;
        checkLabel.appendChild(document.createTextNode(element.name));

        var divcheckbox = document.createElement('div');
        divcheckbox.className = 'ui checkbox item';

        divcheckbox.appendChild(createCheck);
        divcheckbox.appendChild(checkLabel);

        outputChecklist.appendChild(divcheckbox);
    });

    return outputChecklist;
}

//error checking

function createAlert(alertText) {
    var alertContainer = document.createElement('div');
    alertContainer.className = 'ui message';

    var alertHeaderContainer = document.createElement('div');
    alertHeaderContainer.className = 'header';
    var alertHeader = document.createTextNode('Input Error');
    alertHeaderContainer.appendChild(alertHeader);


    var alertContentContainer = document.createElement('p');
    var alertContent = document.createTextNode(alertText);
    alertContentContainer.appendChild(alertContent);

    alertContainer.appendChild(alertHeaderContainer);
    alertContainer.appendChild(alertContentContainer);

return alertContainer;
}

function checkAge() {

    var currentAge = document.getElementById('age').value;
    if (currentAge > 150 || currentAge < 64) {
        if(document.getElementById('warningage').childNodes.length == 0)
        {
            const warning = createAlert("Please set the age between 65 and 150");
            document.getElementById('warningage').appendChild(warning);
        }
    } else {resetAgeAlert();}
}

function checkGlasgow() {
    var currentGlasgow = document.getElementById('glasgow').value;

    if (currentGlasgow < 2 || currentGlasgow > 16) {
        if(document.getElementById('warningglasgow').childNodes.length == 0)
        {
            const warning = createAlert("Please set the Glasgow Score between 3 and 15");
            document.getElementById('warningglasgow').appendChild(warning);
        }
    } else {resetGlasgowAlert();}
}


//Start Program

function startApp() {

    const ageHeader = createHeader('Enabled');
    document.getElementById("status").appendChild(ageHeader);

    const submitButton = createSubmit();
    document.getElementById("buttons").appendChild(submitButton);

    const resetButton = createReset();
    document.getElementById("buttons").appendChild(resetButton);
}

$('#EMATForm')
    .form({
        on: 'blur',
        fields: {
            age: {
                identifer: 'age',
                rules: [
                    {
                        type: 'integer[65..150]',
                        prompt: 'Please enter an age greater than 65'
                    }
                ]
            },
            glasgow: {
                identifier: 'glasgow',
                rules: [
                    {
                        type: 'integer[3..15]',
                        prompt: 'Please enter an GCS score between 3 and 15'
                    }
                ]
            }
        }
    });
